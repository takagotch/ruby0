{
  "name": "grunt-eco",
  "description": "Compiles embedded CoffeeScript templates",
  "keywords": [
    "gruntplugin"
  ],
  "version": "0.1.2",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/gr2m/grunt-eco/blob/master/LICENSE-MIT"
    }
  ],
  "homepage": "https://github.com/gr2m/grunt-eco",
  "repository": {
    "type": "git",
    "url": "git://github.com/gr2m/grunt-eco.git"
  },
  "bugs": {
    "url": "https://github.com/gr2m/grunt-eco/issues"
  },
  "author": {
    "name": "Gregor Martynus",
    "email": "gregor@martynus.net"
  },
  "contributors": [
    {
      "name": "Aaron D. Valade",
      "url": "https://github.com/avalade"
    },
    {
      "name": "Derek Lindahl",
      "url": "https://github.com/dlindahl"
    },
    {
      "name": "Tim Oxley",
      "url": "https://github.com/timoxley"
    },
    {
      "name": "Pete Bacon Darwin",
      "url": "https://github.com/petebacondarwin"
    },
    {
      "name": "Kevin Rockwood",
      "url": "https://github.com/rockwood"
    },
    {
      "name": "Ken 'Elf' Matheiu Sternberg",
      "url": "https://github.com/elfsternberg"
    },
    {
      "name": "siriux",
      "url": "https://github.com/siriux"
    },
    {
      "name": "Enleur",
      "url": "https://github.com/Enleur"
    },
    {
      "name": "brewster1134",
      "url": "https://github.com/brewster1134"
    },
    {
      "name": "srigi",
      "url": "https://github.com/srigi"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">=0.8"
  },
  "dependencies": {
    "eco": "~1.0"
  },
  "devDependencies": {
    "grunt": "~0.4",
    "grunt-contrib-clean": ">=0.4",
    "grunt-contrib-jshint": ">=0.1.1",
    "grunt-contrib-nodeunit": ">=0.1.2"
  },
  "peerDependencies": {
    "grunt": "~0.4"
  },
  "readme": "# grunt-eco\n\nCompiles [Embedded CoffeeScript templates](https://github.com/sstephenson/eco) (`.eco`) into JavaScript functions.\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-eco --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your `Gruntfile.js` with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-eco');\n```\n\n*This plugin was designed to work with Grunt 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.3.1](https://github.com/gruntjs/grunt-contrib-stylus/tree/grunt-0.3-stable).*\n\n## eco task\n\nRun this task with the `grunt eco` command.\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n### Options\n\n#### amd\nType: `Boolean`\nDefault: `false`\n\nDefines if compiled function will be wrapped in AMD `define` function.\n\n#### basePath\nType: `String`\nDefault: `empty`\n\nDefines substing which gets removed from JSTpath of output template.\n\n### emptyWarning\n\nType: `Boolean`\nDefault: `true`\n\nDefines if task will warn about empty files on console.\n\n#### jstGlobalCheck\n\nType: `Boolean`\nDefault: `true`\n\nDefines if compiled function is prepended by code checking/defining presence of `JST` object on `window`.\n\n*please note when `amd` is set to `true` the `jstGlobalCheck` is ignored*.\n\n### Warning\n\n`preserve_dirs` and `base_path` options are not supported anymore! See examples how task's paths are configured now.\n\n### Examples\n\nTwo most common ways of compiling all [globbed paths](http://gruntjs.com/configuring-tasks#globbing-patterns) into single file:\n\n```js\neco: {\n  app: {\n    files: {\n      'path/to/templates.js': ['src/templates/**/*.eco']\n    }\n  }\n}\n```\n\n\n```js\neco: {\n  app: {\n    src: ['src/templates/**/*.eco'],\n    dest: 'path/to/templates.js'\n  }\n}\n```\nIf you need to compile `.eco` templates into individual files in some sort of destination folder, you can [dynamiccally build path object](http://gruntjs.com/configuring-tasks#building-the-files-object-dynamically):\n\n```js\neco: {\n  app: {\n    files: [{\n      expand: true,\n      src: ['src/templates/**/*.eco'],\n      dest: 'path/to/templates',\n      ext: '.js'\n    }]\n  }\n}\n```\n\nIf you ommit `dest` key, templates will be compiled right next to your `.eco` files.\n\nTo configure `eco` task simply define `options` object:\n\n```js\neco: {\n  app: {\n    options: {\n      amd: true\n    }\n    files: {\n      'path/to/templates.js': ['src/templates/**/*.eco']\n    }\n  }\n}\n```\n\n## Acknowledgment\n\nThis grunt plugin is based on and heavily inspired by [grunt-contrib-stylus](https://github.com/gruntjs/grunt-contrib-stylus).\n\n## Contributing\n\nTo start, just clone project and then run `npm install` in project root.\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Always lint and test your code by running `grunt` in project's root.\n\nCreate new GIT branch (`git checkout -b my_feature`) when sending pull request.\n\n## Release History\n\n* `Jun 20, 2014    v0.1.2` - Bubble up task failure\n* `Jun 16, 2013    v0.1.0` - Refactoring, tests, AMD support\n* `Mar 04, 2013    v0.0.2` - Grunt 0.4 compatibility\n* `Nov 18, 2012    v0.0.1` - Initial commit\n\n\n## License\nCopyright (c) 2012 Gregor Martynus\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-eco@0.1.2",
  "_from": "grunt-eco@~0.1.2"
}
