/***
 * Excerpted from "CoffeeScript: Accelerated JavaScript Development, Second Edition",
 * published by The Pragmatic Bookshelf.
 * Copyrights apply to this code. It may not be used to create training material, 
 * courses, books, articles, and the like. Contact us if you are in doubt.
 * We make no guarantees that this code is fit for any purpose. 
 * Visit http://www.pragmaticprogrammer.com/titles/tbcoffee2 for more book information.
***/
/**
 * Choice object
 * Normalize input as choice object
 */

var _ = require("lodash");

/**
 * Module exports
 */

module.exports = Choice;


/**
 * Choice object
 * @constructor
 * @param {String|Object} val  Choice value. If an object is passed, it should contains
 *                             at least one of `value` or `name` property
 */

function Choice( val, answers ) {

  // Don't process Choice and Separator object
  if ( val instanceof Choice || val.type === "separator" ) {
    return val;
  }

  if ( _.isString(val) ) {
    this.name = val;
    this.value = val;
  } else {
    _.extend( this, val, {
      name: val.name || val.value,
      value: val.hasOwnProperty("value") ? val.value : val.name
    });
  }

  if ( _.isFunction(val.disabled) ) {
    this.disabled = val.disabled( answers );
  } else {
    this.disabled = val.disabled;
  }
}
